<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Randson Oliveira</title>
        <link>http://randsonjs.com</link>
        <atom:link href="http://randsonjs.com/feed/index.xml" rel="self" type="application/rss+xml"/>
        <pubDate>Sun, 22 Nov 2015 18:40:14 -0200</pubDate>
        <lastBuildDate>Sun, 22 Nov 2015 18:40:14 -0200</lastBuildDate>
        <generator>Jekyll v3.0.1</generator>
        
            
            <item>
                <title>Protip: Use Arrow Functions</title>
                <description>&lt;p class=&quot;flash&quot;&gt;
    This article was translated to Brazilian Portuguese and posted on &lt;a href=&quot;http://tutsmais.com.br/blog/ecmascript6/faca-uso-do-arrow-functions/&quot;&gt;Tutsmais&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;There is hardly any reason anymore to use &lt;code class=&quot;highlighter-rouge&quot;&gt;var _this = this&lt;/code&gt; or other name to store the value of &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt;
for future use. Before ES6, it was a necessity of code to be littered with references to &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt; due date to each
function binding &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt; to this own scope. For Example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;Framebuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;invert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_this&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_invertLocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;Framebuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_invertLocation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// code goes here&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Arrow functions introduce lexical scope for functions, so that the value of this in an arrow function is
bound to the callee’s scope. The relevant portion in the above example could be rewritten as:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;Framebuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;invert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_invertLocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;Framebuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_invertLocation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// code goes here&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The line in the first example declaring &lt;code class=&quot;highlighter-rouge&quot;&gt;_this&lt;/code&gt; may be removed entirely.&lt;/p&gt;
</description>
                <pubDate>Mon, 05 Oct 2015 00:00:00 -0300</pubDate>
                <link>http://randsonjs.com/protip-use-arrow-functions/</link>
                <guid isPermaLink="true">http://randsonjs.com/protip-use-arrow-functions/</guid>
                
                
                    <category>javascript</category>
                
                    <category>es6</category>
                
            </item>
            
        
            
            <item>
                <title>Create Additional Databases in Homestead</title>
                <description>&lt;p&gt;I often see &lt;a href=&quot;http://laravel.com/docs/5.1/homestead&quot;&gt;Homestead&lt;/a&gt; users just using the default &lt;code class=&quot;highlighter-rouge&quot;&gt;homestead&lt;/code&gt; database that ships in a new Homestead box, rather
than create a new database specific to their application. When you’re hosting multiple application through your homestead
instance it makes a lot more sense to name your database per-application, often with a &lt;code class=&quot;highlighter-rouge&quot;&gt;_testing&lt;/code&gt; suffix for your
test database.&lt;/p&gt;

&lt;p&gt;It’s actually really easy to add new databases inside your homestead instance and here instructions for both. MySQL and PostgreSQL.&lt;/p&gt;

&lt;h2 id=&quot;postgresql&quot;&gt;PostgreSQL&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;// Login to PostgreSQL &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;password is &lt;span class=&quot;s2&quot;&gt;&quot;secret&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
psql -U homestead -h localhost

// Create the new database
CREATE DATABASE your_database_name;

// Exit PostgreSQL
&lt;span class=&quot;se&quot;&gt;\q&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;mysql&quot;&gt;MySQL&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;// Login to MySQL &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;password is &lt;span class=&quot;s2&quot;&gt;&quot;secret&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
mysql -u homestead -p

// Create the new database
CREATE DATABASE your_database_name;

// Exit MySQL
&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
                <pubDate>Sat, 15 Aug 2015 00:00:00 -0300</pubDate>
                <link>http://randsonjs.com/create-additional-databases-in-laravel-homestead/</link>
                <guid isPermaLink="true">http://randsonjs.com/create-additional-databases-in-laravel-homestead/</guid>
                
                
            </item>
            
        
            
            <item>
                <title>The UNIX Operating System</title>
                <description>&lt;p&gt;In the late 1960s, Bell Laboratories computer scientists Dennis Ritchie and Ken Thompson started work on a project that was inspired by an operating system called Multics, a joint project of MIT, GE, and Bell Labs. The host and narrator of this film, Victor Vyssotsky, also had worked on the Multics project. Ritchie and Thompson, recognizing some of the problems with the Multics OS, set out to create a more useful, flexible, and portable system for programmers to work with.&lt;/p&gt;

&lt;p&gt;What’s fascinating about the growth of UNIX is the long amount of time that it was given to develop, almost organically, and based on the needs of the users and programmers. The first installation of the program was done as late as 1972 (on a NY Telephone branch computer). It was in conjunction with the refinement of the C programming language, principally designed by Dennis Ritchie.&lt;/p&gt;

&lt;p&gt;Because the Bell System had limitations placed by the government that prevented them from selling software, UNIX was made available under license to universities and the government. This helped further its development, as well as making it a more “open” system.&lt;/p&gt;

&lt;p&gt;This film “The UNIX System: Making Computers More Productive”, is one of two that Bell Labs made in 1982 about UNIX’s significance, impact and usability. Even 10 years after its first installation, it’s still an introduction to the system. The other film, “The UNIX System: Making Computers Easier to Use”, is roughly the same, only a little shorter. The former film was geared towards software developers and computer science students, the latter towards programmers specifically.&lt;/p&gt;

&lt;p&gt;The film contains interviews with primary developers Ritchie, Thompson, Brian Kernighan and many others.&lt;/p&gt;

&lt;div class=&quot;video&quot;&gt;
&lt;iframe height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/tc4ROCJYbm0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
                <pubDate>Sun, 31 May 2015 00:00:00 -0300</pubDate>
                <link>http://randsonjs.com/the-unix-operating-system/</link>
                <guid isPermaLink="true">http://randsonjs.com/the-unix-operating-system/</guid>
                
                
            </item>
            
        
            
            <item>
                <title>Upgrade My Blog and I&#39;m Using SMACSS</title>
                <description>&lt;p&gt;Last week I updated the layout of my blog and I’m using SMACSS. On top of that, I prepared some topics that describe the structure I’m using!&lt;/p&gt;

&lt;p&gt;First of all, the SMACSS it’s not the best methodology in the world. He helped me a lot to organize my CSS and maybe he can help you :) AND…&lt;/p&gt;

&lt;p class=&quot;pull-quote&quot;&gt;
    SMACSS IT&#39;S NOT A FRAMEWORK
&lt;/p&gt;

&lt;p&gt;SMACSS it’s not like a &lt;a href=&quot;http://getbootstrap.com&quot;&gt;Twitter Bootstrap&lt;/a&gt;, &lt;a href=&quot;http://purecss.io/&quot;&gt;Pure CSS&lt;/a&gt; and many others. It does not come with a set of classes for you to use. It’s just a set of ideias for you to organize your CSS in the best way. You’re not required to use SMACSS the way he is.&lt;/p&gt;

&lt;p&gt;There is a &lt;a href=&quot;https://smacss.com/files/2012-03-15-workshop-essen.pdf&quot;&gt;document&lt;/a&gt; on the web about SMACSS workshop. Where the author explains what SMACSS and some points to you use it. On this basics, we can take 5 principles of SMACSS, they are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#categorization&quot;&gt;Categorization&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#naming-convention&quot;&gt;Naming Convention&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#uncouple&quot;&gt;Uncouple&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#increase-semantics&quot;&gt;Increase Semantics&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#state-based-design&quot;&gt;State Based Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All you read about SMACSS here, it’s not a rule. Only ideas of how to organize the CSS of your project. I learned a lot about SMACSS reading posts and articles out of the document cited above.&lt;/p&gt;

&lt;p&gt;Now, I’ll introduce you below 5 principles of SMACSS. Have fun!&lt;/p&gt;

&lt;h2 id=&quot;categorization&quot;&gt;Categorization&lt;/h2&gt;

&lt;p&gt;Every project needs some organization. And SMACSS will help you to to organize your project. He describe some points to separate your CSS. The points below was removed from the &lt;a href=&quot;https://smacss.com/book/categorizing&quot;&gt;docs&lt;/a&gt; on website. Let’s see:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Base&lt;/li&gt;
  &lt;li&gt;Layout&lt;/li&gt;
  &lt;li&gt;Module&lt;/li&gt;
  &lt;li&gt;State&lt;/li&gt;
  &lt;li&gt;Theme&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Base rules&lt;/strong&gt; are the defaults. They are almost exclusively single element selectors but it could include attribute selectors, pseudo-class selectors, child selectors or sibling selectors. Essentially, a base style says that wherever this element is on the page, it should look like &lt;em&gt;this&lt;/em&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#999&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#039&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#03C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Layout rules&lt;/strong&gt; divide the page into sections. Layouts hold one or more modules together.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Modules&lt;/strong&gt; are the reusable, modular parts of our design. They are the callouts, the sidebar sections, the product lists and so on.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;State rules&lt;/strong&gt; are ways to describe how our modules or layouts will look when in a particular state. Is it hidden or expanded? Is it active or inactive? They are about describing how a module or layout looks on screens that are smaller or bigger. See these CSS classes to understand:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.is-active&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.is-hidden&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Finally, &lt;strong&gt;Theme rules&lt;/strong&gt; are similar to state rules in that they describe how modules or layouts might look. Most sites don’t require a layer of theming but it is good to be aware of it.&lt;/p&gt;

&lt;h2 id=&quot;naming-convention&quot;&gt;Naming Convention&lt;/h2&gt;

&lt;p&gt;Naming conventions clarify intents. We see an example of how to define a nomenclature for their classes. Where you set the whole class from the layout of start with the &lt;code class=&quot;highlighter-rouge&quot;&gt;-l&lt;/code&gt; prefix.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.l-header&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.l-sidebar&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.l-content&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;80%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Specificity is dangerous. Always give preference to classes instead of ID’s.&lt;/p&gt;

&lt;h2 id=&quot;uncouple&quot;&gt;Uncouple&lt;/h2&gt;

&lt;p&gt;We must be abuse of reuse of code. Causing any style disturb a module or any other thing you want to style again. Theoretically, it should be “reset”, ie the default browser in order to apply our style.&lt;/p&gt;

&lt;p&gt;Thinking about it, we should not base our selectors in ID’s. Since we want our code to be reused by another element. We must use class instead of ID’s or HTML Elements.&lt;/p&gt;

&lt;p&gt;Use ID’s with grave caution.&lt;/p&gt;

&lt;h2 id=&quot;increase-semantics&quot;&gt;Increase Semantics&lt;/h2&gt;

&lt;p&gt;We can have a button element to the designer his behavior is a link. Or we can have an &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt; element to the designer his behavior is a button. So our classes must have names that are linked to it’s function. See an example below a link and button:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;style &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;.link&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;text-decoration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;underline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;.button&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://randsonjs.com&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;link&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Link&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://randsonjs.com&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;button&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Button&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We can also have &lt;code class=&quot;highlighter-rouge&quot;&gt;div&lt;/code&gt; that behave like lists and items lists:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;style &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;.list&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;.list&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.item-list&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inline-block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;list&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item-list&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Lorem1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item-list&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Lorem2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The ideia here is to keep the semantics. Many carousel jQuery plugins use &lt;code class=&quot;highlighter-rouge&quot;&gt;div&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;p&lt;/code&gt; to declare their items. Thus we maintain our semantics and use the plugin insted of simply leaves you to use it for that.&lt;/p&gt;

&lt;h2 id=&quot;state-based-design&quot;&gt;State Based Design&lt;/h2&gt;

&lt;p&gt;The last is State Based Design. He proposes that we use classes to declare states of elements. Classes as &lt;code class=&quot;highlighter-rouge&quot;&gt;.is-active&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;.is-hidden&lt;/code&gt; can be used to improve the semantics. Also instead of you use a jQuery selector to remove the DOM element. You cut and adds class from element.&lt;/p&gt;

&lt;p&gt;See an example about state classes:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.is-active&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.is-hidden&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.is-disable&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And abuse of reuse.&lt;/p&gt;

&lt;h2 id=&quot;considerations&quot;&gt;Considerations&lt;/h2&gt;

&lt;p&gt;All these thoughts about SMACSS is good to keep in mind. You’re not obliged to follow them. In fact, SMACSS is free for you to do it your way. See what’s best of you and use.&lt;/p&gt;

&lt;p&gt;SMACSS is free, be you too :)&lt;/p&gt;
</description>
                <pubDate>Mon, 06 Apr 2015 00:00:00 -0300</pubDate>
                <link>http://randsonjs.com/upgraded-my-blog-and-iam-using-smacss/</link>
                <guid isPermaLink="true">http://randsonjs.com/upgraded-my-blog-and-iam-using-smacss/</guid>
                
                    <category>css</category>
                
                    <category>smacss</category>
                
                
            </item>
            
        
            
            <item>
                <title>How to Find Qualified Developers</title>
                <description>&lt;p class=&quot;flash&quot;&gt;This article was originally posted on &lt;a href=&quot;https://medium.com/@randsonjs/guia-para-encontrar-desenvolvedores-qualificados-c6d65594534&quot;&gt;Medium&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Finding a good developer is hard.&lt;/p&gt;

&lt;p&gt;People always complain of few qualified candidates who receive. They post their job openings know to each list. They do all this in the hope that a larger stack of resumes will yield at least one contract that comes to your standards.&lt;/p&gt;

&lt;p&gt;The problem with this strategy is that it will not improve the quality of their candidate. More CVs means more time considering the people you will never hire. And if your company is most like others, you don’t have time for this.&lt;/p&gt;

&lt;p&gt;The best way to find good developers is not to wait for them to come to you. You go out and find them. As most of us know, the traditional way of hiring is outdated.&lt;/p&gt;

&lt;p&gt;In this article, I’ll show you a different way to find good developers to work in your company. What I hope is to help as many people possible.&lt;/p&gt;

&lt;h2 id=&quot;the-strategy&quot;&gt;The Strategy&lt;/h2&gt;

&lt;p&gt;Every company we know use the method of recommendation or any another method to hire developers. They eliminate a good portion of people who do not the job for which you are hiring. Someone on your team know any developer who can do what you need. Mark an interview, and then company hires.&lt;/p&gt;

&lt;p&gt;The problem is that many developers do not know good developers. And most companies(specially small) are no references quickly.&lt;/p&gt;

&lt;p&gt;The technique I recommend aims to capture the best aspects of references without firsthand knowledge. This technique is intended to find people who already have a proven knowledge to perform this function.&lt;/p&gt;

&lt;p&gt;How? Simple, look at &lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;open-source&quot;&gt;Open Source&lt;/h2&gt;

&lt;p&gt;Okay, it’s obviously more complicated look at GitHub. GitHub have million users and the most of them will not do for you.&lt;/p&gt;

&lt;p&gt;Thus the challenge of finding a good developer is narrower.&lt;/p&gt;

&lt;p&gt;If you company is an agency, the most of software you use is Open Source. And you’ll probably want to hire someone who knows how to use it. That’s where the open source comes in, you can not only see the code. You can also take a look at contributors.&lt;/p&gt;

&lt;p&gt;You can take the tool authors in question, to contact and talk about a job offer. But make no mistake, guys like John Resig, Douglas Crockford, among others. You can not hire them. Or it may be that they really want works for you. But, back to the subject. Exist the collaborators.&lt;/p&gt;

&lt;p&gt;A quick look at the contributors flap design. You can see the colaborators(million of them). Analyze their contributions at the repository and see their qualities. If he is involved with the tool, no matter how small is your contribution. He is part of that group of users that make use of the tool. And that’s what you’re looking for, people who know how to use that tool in question.&lt;/p&gt;

&lt;p&gt;Being more specific, you saw thousands of contributors in the project and still not know where to start. A tip is to go by opening the profile of each, analyzing their contributions and seeing their repositories. The more likes the repository is, more popular it is. The followers of this repository also have very. The more followers a person is, better. So she contributes to the community, no matter way. Being improvement code, lectures, anything. More followers means more people know that person or liked their contributions.&lt;/p&gt;

&lt;p&gt;Looking organizations that the person participes, you can see on which niche it is inserted.&lt;/p&gt;

&lt;p&gt;Here is a list of repositories you can see your contributors.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/twbs/bootstrap&quot;&gt;Bootstrap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/angular/angular.js&quot;&gt;AngularJS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jquery/jquery&quot;&gt;jQuery&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/yahoo/pure&quot;&gt;Pure CSS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are millions, look the better for you.&lt;/p&gt;

&lt;h2 id=&quot;the-problem&quot;&gt;The Problem!&lt;/h2&gt;

&lt;p&gt;You searched in organizations, repositories and found a guy who knows the subject. It has some repositories on your profile that make use of that tool you use in the company. Like much of his work and would like to have it on your company.&lt;/p&gt;

&lt;p&gt;The problem is that he is from another state, often in another country. So how I hire that person to work in my company? One answer: &lt;strong&gt;remote work&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;By contacting the professional, you can discuss working hours wages and benefits that you can give to your new employee. And then, you have a guarantee that caught the right professional to work on your business. Directly from the tool you want to let them know.&lt;/p&gt;

&lt;p&gt;We know that that you may experience other implications of people away.&lt;/p&gt;

&lt;p&gt;Examine how best to hire this professional and make your considerations.&lt;/p&gt;

&lt;h2 id=&quot;why-colaborators&quot;&gt;Why Colaborators?&lt;/h2&gt;

&lt;p&gt;We know that many professionals are not present in the repositories or organizations you want. And many people did not cooperate with that project. But they know how to use these tools very well. And many have already made quite a few projects with her.&lt;/p&gt;

&lt;p&gt;Thinking about these professionals. If they did not get to share their codes or minimum report a problem to the repository. Certainly he did not come for you to hire him. We know that there are exceptions and there are many people out there who do not share their code and are great professionals.&lt;/p&gt;

&lt;p&gt;But, why not get in touch with a person who knows the tool? Participating in its development. Even if it bug report, testing to the tool. There are several ways you look at that person you want to hire.&lt;/p&gt;

&lt;p&gt;In GitHub you’ll find the right professional, one community member, event participant related to the area in question. And by the end, a lover of technology.&lt;/p&gt;

&lt;h2 id=&quot;considerations&quot;&gt;Considerations&lt;/h2&gt;

&lt;p&gt;This was one of the ways I want to share with you. I hope I can help you in fight to find a good developer.&lt;/p&gt;

&lt;p&gt;We know that there are several ways for you to find developers for your company without using a Open Source World for that. I hope you find my thoughts and give opportunities for people to help the Open Source World. They deserve attention in particular.&lt;/p&gt;
</description>
                <pubDate>Wed, 11 Feb 2015 00:00:00 -0200</pubDate>
                <link>http://randsonjs.com/how-to-find-qualified-developers/</link>
                <guid isPermaLink="true">http://randsonjs.com/how-to-find-qualified-developers/</guid>
                
                
            </item>
            
        
            
            <item>
                <title>The Node Frameworks Contributors</title>
                <description>&lt;p&gt;I want express my gratitude to &lt;a href=&quot;https://twitter.com/azat_co&quot;&gt;Azat Mardan&lt;/a&gt; who quoted me on &lt;a href=&quot;http://webapplog.com/the-node-frameworks-contributor/&quot;&gt;their website&lt;/a&gt; about contributions I made on your repository.&lt;/p&gt;

&lt;p&gt;In fact, I’m the #1 contributor on the project right now. Thank you for quoted me! These quotes inspire me even more.&lt;/p&gt;

&lt;p style=&quot;text-align: center&quot;&gt;
    &lt;img src=&quot;http://m03s6dh33i0jtc3uzfml36au.wpengine.netdna-cdn.com/wp-content/uploads/Screenshot-2014-12-07-10.34.57.png&quot; alt=&quot;Uma foto com descrição dos commits&quot; title=&quot;Uma foto com descrição dos commits&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;If you don’t know what the &lt;a href=&quot;http://nodeframework.com/&quot;&gt;Node Frameworks project&lt;/a&gt; is about—check it out. The mission of this resource is to provide recommendations and one place for discovering Node.js frameworks and tutorials/examples for them. The stats for each library is really interesting to compare.&lt;/p&gt;
</description>
                <pubDate>Mon, 29 Dec 2014 00:00:00 -0200</pubDate>
                <link>http://randsonjs.com/the-node-frameworks-contributors/</link>
                <guid isPermaLink="true">http://randsonjs.com/the-node-frameworks-contributors/</guid>
                
                
            </item>
            
        
            
            <item>
                <title>Welcome to Jekyll!</title>
                <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory - edit this post and re-build (or run with the &lt;code class=&quot;highlighter-rouge&quot;&gt;-w&lt;/code&gt; switch) to see your changes!
To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention: YYYY-MM-DD-name-of-post.ext.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Tom&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &#39;Hi, Tom&#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;.&lt;/p&gt;

</description>
                <pubDate>Fri, 21 Mar 2014 10:56:04 -0300</pubDate>
                <link>http://randsonjs.com/welcome-to-jekyll/</link>
                <guid isPermaLink="true">http://randsonjs.com/welcome-to-jekyll/</guid>
                
                
                    <category>jekyll</category>
                
                    <category>update</category>
                
            </item>
            
        
</channel>
</rss>